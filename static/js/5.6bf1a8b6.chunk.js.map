{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ingr","style","textTransform","display","margin","className","styles","Number","price","toFixed","Orders","state","orders","loading","this","onFetchOrders","token","userId","Spinner","order","id","Component","connect","auth","dispatch","fetchOrders","withErrorHandler","axios"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,uB,gHCqCXC,EAnCD,SAACC,GACb,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAI9B,IAAMI,EAAmBL,EAAYM,KAAI,SAACC,GACxC,OACE,uBACEC,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,SAJZ,UAQGJ,EAAKJ,KARR,KAQgBI,EAAKH,OARrB,MAMOG,EAAKJ,SAOhB,OACE,sBAAKS,UAAWC,IAAOf,MAAvB,UACE,8CAAiBO,KACjB,wCACS,0CAAaS,OAAOf,EAAMgB,OAAOC,QAAQ,a,gCCvBlDC,E,4MACJC,MAAQ,CACNC,OAAQ,GACRC,SAAS,G,kEAITC,KAAKtB,MAAMuB,cAAcD,KAAKtB,MAAMwB,MAAOF,KAAKtB,MAAMyB,U,+BAItD,IAAIL,EAAS,cAACM,EAAA,EAAD,IAab,OAZKJ,KAAKtB,MAAMqB,UACdD,EAASE,KAAKtB,MAAMoB,OAAOb,KAAI,SAACoB,GAC9B,OACE,cAAC,EAAD,CAEE1B,YAAa0B,EAAM1B,YACnBe,MAAOW,EAAMX,OAFRW,EAAMC,QAQZ,8BAAMR,Q,GAxBIS,aA6CNC,uBAjBS,SAACX,GACvB,MAAO,CACLC,OAAQD,EAAMQ,MAAMP,OACpBC,QAASF,EAAMQ,MAAMN,QACrBG,MAAOL,EAAMY,KAAKP,MAClBC,OAAQN,EAAMY,KAAKN,WAII,SAACO,GAC1B,MAAO,CACLT,cAAe,SAACC,EAAOC,GACrBO,EAASC,YAAYT,EAAOC,QAKnBK,CAGbI,YAAiBhB,EAAQiB","file":"static/js/5.6bf1a8b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1By-7\"};","import React from \"react\";\r\nimport styles from \"./Order.module.css\";\r\n\r\nconst Order = (props) => {\r\n  const ingredients = [];\r\n\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientName,\r\n      amount: props.ingredients[ingredientName],\r\n    });\r\n  }\r\n\r\n  const ingredientOutput = ingredients.map((ingr) => {\r\n    return (\r\n      <span\r\n        style={{\r\n          textTransform: \"capitalize\",\r\n          display: \"inline-block\",\r\n          margin: \"0 8px\",\r\n        }}\r\n        key={ingr.name}\r\n      >\r\n        {ingr.name} ({ingr.amount})\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={styles.Order}>\r\n      <p>Ingredients: {ingredientOutput}</p>\r\n      <p>\r\n        Price: <strong>USD {Number(props.price).toFixed(2)}</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport { fetchOrders } from \"../../store/actions/order\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nclass Orders extends Component {\r\n  state = {\r\n    orders: [],\r\n    loading: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchOrders(this.props.token, this.props.userId);\r\n  }\r\n\r\n  render() {\r\n    let orders = <Spinner />;\r\n    if (!this.props.loading) {\r\n      orders = this.props.orders.map((order) => {\r\n        return (\r\n          <Order\r\n            key={order.id}\r\n            ingredients={order.ingredients}\r\n            price={order.price}\r\n          />\r\n        );\r\n      });\r\n    }\r\n\r\n    return <div>{orders}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchOrders: (token, userId) => {\r\n      dispatch(fetchOrders(token, userId));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}